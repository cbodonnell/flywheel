version: '3'
services:
  flywheel-db:
    image: postgres
    environment:
      POSTGRES_USER: ${FLYWHEEL_DB_USER:-flywheel_user}
      POSTGRES_PASSWORD: ${FLYWHEEL_DB_PASSWORD:-password}
      POSTGRES_DB: ${FLYWHEEL_DB_NAME:-flywheel_db}
    volumes:
      - flywheel-db:/var/lib/postgresql/data
      - ./migrations/postgres:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD", "/usr/bin/pg_isready", "-U", "flywheel_user", "-d", "flywheel_db"]
      interval: 1s
      timeout: 10s
      retries: 120
    ports:
      - 5432:5432
    networks:
      - flywheel-network

  flywheel-auth:
    build:
      context: .
      dockerfile: ./deploy/Dockerfile.auth
    command: ["./flywheel-auth", "-log-level", "debug"]
    environment:
      FLYWHEEL_FIREBASE_API_KEY: ${FLYWHEEL_FIREBASE_API_KEY}
    ports:
      - 8080:8080/tcp
    networks:
      - flywheel-network
    restart: on-failure

  flywheel-api:
    build:
      context: .
      dockerfile: ./deploy/Dockerfile.api
    command: ["./flywheel-api", "-log-level", "debug"]
    environment:
      FLYWHEEL_DATABASE_URL: ${FLYWHEEL_DATABASE_URL:-postgresql://flywheel_user:password@flywheel-db:5432/flywheel_db}
      FLYWHEEL_FIREBASE_PROJECT_ID: ${FLYWHEEL_FIREBASE_PROJECT_ID}
    ports:
      - 9090:9090/tcp
    networks:
      - flywheel-network
    depends_on:
      - flywheel-db
    restart: on-failure

  flywheel-game:
    build:
      context: .
      dockerfile: ./deploy/Dockerfile.game
    command: ["./flywheel-game", "-log-level", "debug"]
    environment:
      FLYWHEEL_DATABASE_URL: ${FLYWHEEL_DATABASE_URL:-postgresql://flywheel_user:password@flywheel-db:5432/flywheel_db}
      FLYWHEEL_FIREBASE_PROJECT_ID: ${FLYWHEEL_FIREBASE_PROJECT_ID}
    ports:
      - 8888:8888/tcp
      - 8889:8889/udp
      - 8890:8890/tcp # websocket
    networks:
      - flywheel-network
    depends_on:
      - flywheel-db
    restart: on-failure

networks:
  flywheel-network:

volumes:
  flywheel-db:
